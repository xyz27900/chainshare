name: release-stage

on:
  push:
    tags:
      - 'v*'

jobs:
  contract:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint:sol

      - name: Test
        run: npm run test:sol
        env:
          ACCOUNT: ${{ secrets.ACCOUNT }}

      - name: Build
        run: npm run build:sol
        env:
          ACCOUNT: ${{ secrets.ACCOUNT }}

      - name: Deploy
        run: npm run deploy:sol:ropsten
        env:
          ACCOUNT: ${{ secrets.ACCOUNT }}
          GAS_MULTIPLIER: ${{ secrets.GAS_MULTIPLIER }}

      - name: Verify
        uses: nick-invision/retry@v2
        continue-on-error: true
        with:
          timeout_minutes: 1
          max_attempts: 2
          retry_on: error
          command: npm run verify:sol:ropsten
        env:
          ACCOUNT: ${{ secrets.ACCOUNT }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: contract_artifacts
          path: |
            ./artifacts
            ./.env

  web:
    runs-on: ubuntu-latest
    needs: contract

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: contract_artifacts

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint:web

      - name: Build
        run: npm run build:web -- --base ${{ github.event.repository.name }}
        env:
          ACCOUNT: ${{ secrets.ACCOUNT }}
          NETWORK: ropsten

      - name: Get the version
        id: version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

      - name: Deploy website
        uses: alex-page/blazing-fast-gh-pages-deploy@v1.1.0
        with:
          repo-token: ${{ secrets.ACCESS_TOKEN }}
          site-directory: dist
          commit-message: Release ${{ steps.version.outputs.tag }}
